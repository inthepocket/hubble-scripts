const { outputHelper } = require('./util');
const { mapBaseColors, mapTextStyleColors, mapBorderStyleColors, mapShadowStyleColors } = require('./colorMapping');
const { mapTextStyleAssets } = require('./assetMapping');
const { mapTextStyleSizes, mapBorderStyleSizes } = require('./sizeMapping');

/**
 * Maps the colors of a given input of ITP tokens to Style Dictionary compatible color tokens.
 *
 * @param Object input: ITP tokens 
 * @returns Object: a StyleDictionary tree of category 'color' 
 */
const mapColors = input =>
  outputHelper('color', {
    ...mapBaseColors(input.colors),
    ...mapTextStyleColors(input.textStyles),
    ...mapBorderStyleColors(input.borders),
    ...mapShadowStyleColors(input.shadows),
  });

/**
 * Maps the sizes of a given input of ITP tokens to Style Dictionary compatible size tokens.
 *
 * @param Object input: ITP tokens 
 * @returns Object: a StyleDictionary tree of category 'size' 
 */
const mapSizes = input =>
  outputHelper('size', {
    ...mapTextStyleSizes(input.textStyles),
    ...mapBorderStyleSizes(input.borders),
  });

/**
 * Maps the assets of a given input of ITP tokens to Style Dictionary compatible asset tokens.
 *
 * @param Object input: ITP tokens 
 * @returns Object: a StyleDictionary tree of category 'asset' 
 */
const mapAssets = input => outputHelper('asset', mapTextStyleAssets(input.textStyles));

/**
 * Main entry function.
 * 
 * @param input: ITP Token input, generated by hubble from a sketch source
 * @returns Object: a Style Dictionary compatible token tree
 */
module.exports = (input) => ({
  ...mapColors(input),
  ...mapSizes(input),
  ...mapAssets(input),
});
